// automatically generated by CPROVER/SATABS

// variables with procedure-global scope


// main
void main() begin

      // the procedure-local variables

  decl b0_0_eq_x;   // 0 == x
  decl b1_x_le_0;   // x <= 0
  decl b2_10_eq_x;  // 10 == x

      // initialization of the shared-global and thread-local variables


 PC0: skip; // location only

    // file <built-in-additions> line 27
 PC1: skip; // no predicates changed

    // file <built-in-additions> line 28
 PC2: skip; // no predicates changed

    // file <built-in-additions> line 29
 PC3: skip; // no predicates changed

    // file <built-in-additions> line 30
 PC4: skip; // no predicates changed

    // file <built-in-additions> line 42
 PC5: skip; // no predicates changed

 PC6: skip; // location only

 PC7: skip; // location only

    // file hello.c line 5 function main
 PC8: b0_0_eq_x,b1_x_le_0,b2_10_eq_x := *,*,* constrain
    ((!'b0_0_eq_x) | 'b1_x_le_0) &
    ((!'b1_x_le_0) | (!'b2_10_eq_x)) &
    ((!b0_0_eq_x) | b1_x_le_0);
    // TO Predicates: b0_0_eq_x b1_x_le_0 b2_10_eq_x

    // FROM Predicates: b2_10_eq_x
 PC9: b0_0_eq_x,b1_x_le_0,b2_10_eq_x := 0,0,1 constrain
    ((!b0_0_eq_x) | b1_x_le_0) &
    ((!b1_x_le_0) | (!b2_10_eq_x));
    // TO Predicates: b0_0_eq_x b1_x_le_0 b2_10_eq_x

    // file hello.c line 7 function main
    // FROM Predicates: b1_x_le_0
  l1:
PC10: if b1_x_le_0 then goto l2; fi;

    // file hello.c line 8 function main
PC11: b0_0_eq_x,b1_x_le_0,b2_10_eq_x := *,*,* constrain
    (b1_x_le_0 | (!'b1_x_le_0) | (!b2_10_eq_x)) &
    ((!'b0_0_eq_x) | 'b1_x_le_0) &
    ((!b0_0_eq_x) | b1_x_le_0) &
    (b0_0_eq_x | 'b0_0_eq_x | b1_x_le_0 | (!'b1_x_le_0));
    // TO Predicates: b0_0_eq_x b1_x_le_0 b2_10_eq_x

    // file hello.c line 7 function main
PC12: goto l1;

    // file hello.c line 10 function main
  l2:
PC13: assert(b0_0_eq_x);

    // file hello.c line 11 function main
  l3:
PC14: goto l3;

PC15: skip;

end

// c::__CPROVER_initialize
void c$$__CPROVER_initialize() begin

      // the procedure-local variables

  decl b0_0_eq_x;   // 0 == x
  decl b1_x_le_0;   // x <= 0
  decl b2_10_eq_x;  // 10 == x

end

// c::main
void c$$main() begin

      // the procedure-local variables

  decl b0_0_eq_x;   // 0 == x
  decl b1_x_le_0;   // x <= 0
  decl b2_10_eq_x;  // 10 == x

end

